// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/bbs/models"
)

type FakeVersioner struct {
	ValidateStub        func() error
	validateMutex       sync.RWMutex
	validateArgsForCall []struct{}
	validateReturns struct {
		result1 error
	}
	MigrateFromVersionStub        func(v models.Version) error
	migrateFromVersionMutex       sync.RWMutex
	migrateFromVersionArgsForCall []struct {
		v models.Version
	}
	migrateFromVersionReturns struct {
		result1 error
	}
}

func (fake *FakeVersioner) Validate() error {
	fake.validateMutex.Lock()
	fake.validateArgsForCall = append(fake.validateArgsForCall, struct{}{})
	fake.validateMutex.Unlock()
	if fake.ValidateStub != nil {
		return fake.ValidateStub()
	} else {
		return fake.validateReturns.result1
	}
}

func (fake *FakeVersioner) ValidateCallCount() int {
	fake.validateMutex.RLock()
	defer fake.validateMutex.RUnlock()
	return len(fake.validateArgsForCall)
}

func (fake *FakeVersioner) ValidateReturns(result1 error) {
	fake.ValidateStub = nil
	fake.validateReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeVersioner) MigrateFromVersion(v models.Version) error {
	fake.migrateFromVersionMutex.Lock()
	fake.migrateFromVersionArgsForCall = append(fake.migrateFromVersionArgsForCall, struct {
		v models.Version
	}{v})
	fake.migrateFromVersionMutex.Unlock()
	if fake.MigrateFromVersionStub != nil {
		return fake.MigrateFromVersionStub(v)
	} else {
		return fake.migrateFromVersionReturns.result1
	}
}

func (fake *FakeVersioner) MigrateFromVersionCallCount() int {
	fake.migrateFromVersionMutex.RLock()
	defer fake.migrateFromVersionMutex.RUnlock()
	return len(fake.migrateFromVersionArgsForCall)
}

func (fake *FakeVersioner) MigrateFromVersionArgsForCall(i int) models.Version {
	fake.migrateFromVersionMutex.RLock()
	defer fake.migrateFromVersionMutex.RUnlock()
	return fake.migrateFromVersionArgsForCall[i].v
}

func (fake *FakeVersioner) MigrateFromVersionReturns(result1 error) {
	fake.MigrateFromVersionStub = nil
	fake.migrateFromVersionReturns = struct {
		result1 error
	}{result1}
}

var _ models.Versioner = new(FakeVersioner)
